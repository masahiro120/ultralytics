Namespace(model_path='yolov5s6.pt', dataset_path='ultralytics/cfg/datasets/coco.yaml', half=False, int8=True, imgsz=1280)
PRO TIP 💡 Replace 'model=yolov5s6.pt' with new 'model=yolov5s6u.pt'.
YOLOv5 'u' models are trained with https://github.com/ultralytics/ultralytics and feature improved performance vs standard YOLOv5 models trained with https://github.com/ultralytics/yolov5.

########## TensorFlow Lite tflite .tflite True True ##########
YOLOv5s6u summary (fused): 253 layers, 15,293,680 parameters, 0 gradients, 24.4 GFLOPs

[34m[1mPyTorch:[0m starting from 'yolov5s6u.pt' with input shape (1, 3, 1280, 1280) BCHW and output shape(s) (1, 84, 34000) (29.6 MB)

[34m[1mTensorFlow SavedModel:[0m starting export with tensorflow 2.17.0...

[34m[1mONNX:[0m starting export with onnx 1.17.0 opset 17...
============= Diagnostic Run torch.onnx.export version 2.0.1+cu117 =============
verbose: False, log level: Level.ERROR
======================= 0 NONE 0 NOTE 0 WARNING 0 ERROR ========================

[34m[1mONNX:[0m slimming with onnxslim 0.1.35...
[34m[1mONNX:[0m export success ✅ 1.4s, saved as 'yolov5s6u.onnx' (59.5 MB)
[34m[1mTensorFlow SavedModel:[0m collecting INT8 calibration images from 'data=coco8.yaml'
[34m[1mTensorFlow SavedModel:[0m WARNING ⚠️ >300 images recommended for INT8 calibration, found 4 images.
[34m[1mTensorFlow SavedModel:[0m starting TFLite export with onnx2tf 1.22.3...
[31mERROR:[0m The trace log is below.
Traceback (most recent call last):
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/dispatch.py", line 1260, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/math_ops.py", line 1900, in tensor_equals
    return gen_math_ops.equal(self, other, incompatible_shape_error=False)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/weak_tensor_ops.py", line 142, in wrapper
    return op(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/gen_math_ops.py", line 3464, in equal
    return equal_eager_fallback(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/gen_math_ops.py", line 3493, in equal_eager_fallback
    _attr_T, _inputs_T = _execute.args_to_matching_eager([x, y], ctx, [])
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/eager/execute.py", line 259, in args_to_matching_eager
    tensor = tensor_conversion_registry.convert(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/tensor_conversion_registry.py", line 234, in convert
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_tensor_conversion.py", line 29, in _constant_tensor_conversion_function
    return constant_op.constant(v, dtype=dtype, name=name)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/weak_tensor_ops.py", line 142, in wrapper
    return op(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 276, in constant
    return _constant_impl(value, dtype, shape, name, verify_shape=False,
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 289, in _constant_impl
    return _constant_eager_impl(ctx, value, dtype, shape, verify_shape)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 301, in _constant_eager_impl
    t = convert_to_eager_tensor(value, ctx, dtype)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 108, in convert_to_eager_tensor
    return ops.EagerTensor(value, ctx.device_name, dtype)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/keras_tensor.py", line 290, in __array__
    raise TypeError(
TypeError: You are passing KerasTensor(type_spec=TensorSpec(shape=(), dtype=tf.int32, name=None), inferred_value=[4], name='tf.rank_127/Rank:0', description="created by layer 'tf.rank_127'"), an intermediate TF-Keras symbolic input/output, to a TF API that does not allow registering custom dispatchers, such as `tf.cond`, `tf.function`, gradient tapes, or `tf.map_fn`. TF-Keras Functional model construction only supports TF API calls that *do* support dispatching, such as `tf.math.add` or `tf.reshape`. Other APIs cannot be called directly on symbolic Kerasinputs/outputs. You can work around this limitation by putting the operation in a custom TF-Keras layer `call` and calling that layer on this symbolic input/output.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/hasumi/.local/lib/python3.10/site-packages/onnx2tf/utils/common_functions.py", line 312, in print_wrapper_func
    result = func(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/onnx2tf/utils/common_functions.py", line 385, in inverted_operation_enable_disable_wrapper_func
    result = func(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/onnx2tf/utils/common_functions.py", line 55, in get_replacement_parameter_wrapper_func
    func(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/onnx2tf/ops/Mul.py", line 158, in make_node
    is_scalar_2_rank = tf.rank(input_tensor_2) == 0
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/tensor_math_operator_overrides.py", line 138, in _tensor_equals_factory
    return math_ops.tensor_equals(self, other)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/dispatch.py", line 1264, in op_dispatch_handler
    result = dispatch(op_dispatch_handler, args, kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/dispatch.py", line 167, in dispatch
    result = dispatcher.handle(op, args, kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/layers/core/tf_op_layer.py", line 119, in handle
    return TFOpLambda(op)(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/utils/traceback_utils.py", line 65, in error_handler
    return fn(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/base_layer.py", line 1050, in __call__
    return self._functional_construction_call(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/base_layer.py", line 2577, in _functional_construction_call
    outputs = self._keras_tensor_symbolic_call(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/base_layer.py", line 2418, in _keras_tensor_symbolic_call
    return self._infer_output_signature(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/base_layer.py", line 2459, in _infer_output_signature
    inputs = tf.nest.map_structure(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/nest.py", line 628, in map_structure
    return nest_util.map_structure(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/nest_util.py", line 1065, in map_structure
    return _tf_core_map_structure(func, *structure, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/nest_util.py", line 1105, in _tf_core_map_structure
    [func(*x) for x in entries],
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/nest_util.py", line 1105, in <listcomp>
    [func(*x) for x in entries],
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/keras_tensor.py", line 660, in keras_tensor_to_placeholder
    return x._to_placeholder()
  File "/home/hasumi/.local/lib/python3.10/site-packages/tf_keras/src/engine/keras_tensor.py", line 236, in _to_placeholder
    inferred_value = inferred_value[0]
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/dispatch.py", line 1260, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/tensor_getitem_override.py", line 231, in _slice_helper
    array_ops_stack.stack(end),
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/util/dispatch.py", line 1260, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/array_ops_stack.py", line 74, in stack
    return ops.convert_to_tensor(values, name=name)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/profiler/trace.py", line 183, in wrapped
    return func(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/ops.py", line 713, in convert_to_tensor
    return tensor_conversion_registry.convert(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/tensor_conversion_registry.py", line 234, in convert
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_tensor_conversion.py", line 29, in _constant_tensor_conversion_function
    return constant_op.constant(v, dtype=dtype, name=name)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/ops/weak_tensor_ops.py", line 142, in wrapper
    return op(*args, **kwargs)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 276, in constant
    return _constant_impl(value, dtype, shape, name, verify_shape=False,
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/constant_op.py", line 291, in _constant_impl
    const_tensor = ops._create_graph_constant(  # pylint: disable=protected-access
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/ops.py", line 276, in _create_graph_constant
    tensor_util.make_tensor_proto(
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/tensor_util.py", line 627, in make_tensor_proto
    append_fn(tensor_proto, proto_values)
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/tensor_util.py", line 173, in SlowAppendIntArrayToTensorProto
    tensor_proto.int_val.extend([x.item() for x in proto_values])
  File "/home/hasumi/.local/lib/python3.10/site-packages/tensorflow/python/framework/tensor_util.py", line 173, in <listcomp>
    tensor_proto.int_val.extend([x.item() for x in proto_values])
KeyboardInterrupt

[31mERROR:[0m input_onnx_file_path: yolov5s6u.onnx
[31mERROR:[0m onnx_op_name: wa/model.23/m/m.0/cv2/act/Mul
[31mERROR:[0m Read this and deal with it. https://github.com/PINTO0309/onnx2tf#parameter-replacement
[31mERROR:[0m Alternatively, if the input OP has a dynamic dimension, use the -b or -ois option to rewrite it to a static shape and try again.
[31mERROR:[0m If the input OP of ONNX before conversion is NHWC or an irregular channel arrangement other than NCHW, use the -kt or -kat option.
[31mERROR:[0m Also, for models that include NonMaxSuppression in the post-processing, try the -onwdt option.
